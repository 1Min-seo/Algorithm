다이나믹 프로그래밍

다이나믹 프로그래밍은 메모리를 적절히 사용하여 수행 시간 효율성을
비약적으로 향상시키는 방법이다.
이미 계산된 결과는 별도의 메모리 영역에 저장하여 다시 계산하지 않도록 한다.

다이나믹 프로그래밍의 구현은 일반적으로 두 가지 방식(탑다운(하향식), 보텀업(상향식))으로 구성된다.
다이나믹 프로그래밍은 동적 계획법이라고도 부른다.

일반적인 프로그래밍 분야에서의 동적이란 어떤 의미를 가질까?
	- 자료구조에서 동적 할당은 '프로그램이 실행되는 도중에 실행에 필요한
	  메모리를 할당하는 기법'을 의미한다.
	- 반면에 다이나믹 프로그래밍에서 '다이나믹'은 별다른 의미없이 사용된 단어이다.
	

다이나믹 프로그래밍은 문제가 다음의 조건을 만족할 때 사용한다.
	1. 최적 부분 구조
		큰 문제를 작은 문제로 나눌 수 있으며 작은 문제의 답을 모아서
		큰 문제를 해결할 수 있다.
		
	2. 중복되는 부분 문제
		동일한 작은 문제를 반복적으로 해결해야 한다.
		

메모이제이션 (탑다운(하향식)) 방식 -Memoization-
	메모이제이션은 다이나믹 프로그래밍을 구현하는 방법 중 하나이다.
	한 번 계산한 결과를 메모리 공간에 메모하는 기법이다.
		- 같은 문제를 다시 호출하면 메모했던 결과를 그대로 가져온다.
		- 값을 기록해 놓는다는 점에서 캐싱(Cashing)이라고도 한다.
		

		
보텀업 (상향식) 방식
	-결과 저장용 리스트는 DP 테이블이라고 부른다.
	-아래 쪽에서부터 작은 문제를 하나씩 해결해가면서 먼저 계산했던 
	 문제들의 값을 활용해서 그 다음의 문제들을 해결해 나가는 방식
	 그래서 주로 반복문을 사용
	 
	 
