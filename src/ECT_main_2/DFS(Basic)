dfs는 깊이 우선 탐색이라고도 부르며 그래프에서 깊은 부분을 우선적으로 탐색하는 알고리즘
dfs는 스택 자료 구조(혹은 재귀함수)를 이용한다.

1. 탐색 시작 노드를 스택에 삽입하고 방문처리를 한다.
2. 스택의 최상단 노드에 방문하지 않은 인접 노드가 하나라도 있으면
   그 노드를 스택에 넣고 방문 처리를 한다. 방문하지 않은 인접 노드가 없으면
   스택에서 최상단 노드를 꺼낸다.
3. 더 이상 2번의 과정을 수행할 수 없을 때까지 반복한다.


import java.util.*;

public class Main{
	
	public static boolean[] visited = new boolean[9];
	public static ArrayList<ArrayList<Integer>> graph=new ArrayList<ArrayList<Integer>>();
	
	//DFS 함수 정의
	public static void dfs(int x){
		//현재 노드를 방문 처리
		visited[x]=true;
		System.out.print(x+" ");
		//현재 노드와 연결된 다른 노드를 재귀적으로 방문
		for(int i=0; i<graph.size(); i++){
			int y=graph.get(x).get(i);
			if(!visited[y]) dfs(y);
			}
		}
		
		

		
		