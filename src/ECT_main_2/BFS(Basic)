1. bfs는 너비 우선 탐색이라고도 부르며, 그래프에서 가까운 노드부터 우선적으로
   탐색하는 알고리즘이다.
2. bfs는 큐 자료구조를 이용하며, 구체적은 동작 과정은 다음과 같다.
	- 탐색 시작 노드를 큐에 삽입하고 방문처리를 한다.
	- 큐에서 노드를 꺼낸 뒤에 해당 노드의 인접 노드 중에서 방문하지 않은 노드를 모두 큐에
	  삽입하고 방문 처리한다.
	- 더이상 2번의 과정을 수행할 수 없을 때까지 반복한다.
	
public class Main{
	
	pulbic static boolean[] visited=new boolean[9];
	public static ArrayList<ArrayList<Integer>>=
		new ArrayList<ArrayList<Integer>>();
		
		//bfs함수 정의
		public static bfs(int start){
			Queue<Integer> q =new LinkedList<>();
			q.offer(start);
			//현재 노드를 방문처리
			visited[start]=true;
			//큐가 빌 때가지 반복
			while(!q.IsEmpty()){
				//큐에서 하나의 원소를 뽑아 출력
				int x=q.poll();
				System.out.print(x+" ");
				//해당 원소와 연결된, 아직 방문하지 않은 원소들을 큐에 삽입
				for(int i=0; i<graph.get(x).size(); i++){
					int y=graph.get(x).get(i);
					if(!visited[y]){
						q.offer(y);
						visited[y]=true;
						}
					}
				}
			}
			
			